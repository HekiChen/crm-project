"""create_department_table

Revision ID: 599e1afc469a
Revises: 
Create Date: 2025-10-23 16:48:27.256925

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '599e1afc469a'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Step 1: Create departments table WITHOUT manager_id FK constraint (circular dependency)
    op.create_table('departments',
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('parent_id', sa.Uuid(), nullable=True),
    sa.Column('manager_id', sa.Uuid(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sa.Uuid(), nullable=True),
    sa.Column('updated_by_id', sa.Uuid(), nullable=True),
    # Note: manager_id FK constraint will be added later after employees table is created
    sa.ForeignKeyConstraint(['parent_id'], ['departments.id'], name=op.f('fk_departments_parent_id_departments'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_departments')),
    sa.UniqueConstraint('code', 'is_deleted', name='uq_department_code_not_deleted')
    )
    op.create_index(op.f('ix_departments_code'), 'departments', ['code'], unique=False)
    op.create_index(op.f('ix_departments_id'), 'departments', ['id'], unique=False)
    op.create_index(op.f('ix_departments_is_active'), 'departments', ['is_active'], unique=False)
    op.create_index(op.f('ix_departments_is_deleted'), 'departments', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_departments_manager_id'), 'departments', ['manager_id'], unique=False)
    op.create_index(op.f('ix_departments_name'), 'departments', ['name'], unique=False)
    op.create_index(op.f('ix_departments_parent_id'), 'departments', ['parent_id'], unique=False)
    
    # Step 1.5: Create positions table (depends on departments)
    op.create_table('positions',
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('level', sa.Integer(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('department_id', sa.Uuid(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sa.Uuid(), nullable=True),
    sa.Column('updated_by_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], name=op.f('fk_positions_department_id_departments'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_positions')),
    sa.UniqueConstraint('code', 'is_deleted', name='uq_position_code_not_deleted')
    )
    op.create_index(op.f('ix_positions_code'), 'positions', ['code'], unique=False)
    op.create_index(op.f('ix_positions_department_id'), 'positions', ['department_id'], unique=False)
    op.create_index(op.f('ix_positions_id'), 'positions', ['id'], unique=False)
    op.create_index(op.f('ix_positions_is_active'), 'positions', ['is_active'], unique=False)
    op.create_index(op.f('ix_positions_is_deleted'), 'positions', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_positions_level'), 'positions', ['level'], unique=False)
    op.create_index(op.f('ix_positions_name'), 'positions', ['name'], unique=False)
    
    # Step 1.6: Create roles table (no dependencies)
    op.create_table('roles',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('is_system_role', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sa.Uuid(), nullable=True),
    sa.Column('updated_by_id', sa.Uuid(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_roles')),
    sa.UniqueConstraint('code', 'is_deleted', name='uq_role_code_not_deleted')
    )
    op.create_index(op.f('ix_roles_code'), 'roles', ['code'], unique=False)
    op.create_index(op.f('ix_roles_id'), 'roles', ['id'], unique=False)
    op.create_index(op.f('ix_roles_is_deleted'), 'roles', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_roles_is_system_role'), 'roles', ['is_system_role'], unique=False)
    op.create_index(op.f('ix_roles_name'), 'roles', ['name'], unique=False)
    
    # Step 1.7: Create menus table (no dependencies)
    op.create_table('menus',
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('path', sa.String(length=255), nullable=False),
    sa.Column('icon', sa.String(length=100), nullable=True),
    sa.Column('parent_id', sa.Uuid(), nullable=True),
    sa.Column('sort_order', sa.Integer(), nullable=False),
    sa.Column('menu_type', sa.String(length=20), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sa.Uuid(), nullable=True),
    sa.Column('updated_by_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['menus.id'], name=op.f('fk_menus_parent_id_menus'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_menus'))
    )
    op.create_index(op.f('ix_menus_id'), 'menus', ['id'], unique=False)
    op.create_index(op.f('ix_menus_is_active'), 'menus', ['is_active'], unique=False)
    op.create_index(op.f('ix_menus_is_deleted'), 'menus', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_menus_name'), 'menus', ['name'], unique=False)
    op.create_index(op.f('ix_menus_parent_id'), 'menus', ['parent_id'], unique=False)
    op.create_index(op.f('ix_menus_path'), 'menus', ['path'], unique=False)
    op.create_index(op.f('ix_menus_sort_order'), 'menus', ['sort_order'], unique=False)
    
    # Step 1.8: Create employees table (depends on departments and positions)
    op.create_table('employees',
    sa.Column('first_name', sa.String(length=255), nullable=False),
    sa.Column('last_name', sa.String(length=255), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sa.Uuid(), nullable=True),
    sa.Column('updated_by_id', sa.Uuid(), nullable=True),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('address1', sa.String(length=255), nullable=True),
    sa.Column('address2', sa.String(length=255), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('state', sa.String(length=100), nullable=True),
    sa.Column('zip_code', sa.String(length=20), nullable=True),
    sa.Column('country', sa.String(length=100), nullable=True),
    sa.Column('employee_number', sa.String(length=50), nullable=False),
    sa.Column('hire_date', sa.Date(), nullable=False),
    sa.Column('position_id', sa.Uuid(), nullable=True),
    sa.Column('department_id', sa.Uuid(), nullable=True),
    sa.Column('manager_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['department_id'], ['departments.id'], name=op.f('fk_employees_department_id_departments'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['manager_id'], ['employees.id'], name=op.f('fk_employees_manager_id_employees'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['position_id'], ['positions.id'], name=op.f('fk_employees_position_id_positions'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_employees')),
    sa.UniqueConstraint('email', name=op.f('uq_employees_email')),
    sa.UniqueConstraint('employee_number', 'is_deleted', name='uq_employee_number_not_deleted')
    )
    op.create_index(op.f('ix_employees_department_id'), 'employees', ['department_id'], unique=False)
    op.create_index(op.f('ix_employees_employee_number'), 'employees', ['employee_number'], unique=True)
    op.create_index(op.f('ix_employees_id'), 'employees', ['id'], unique=False)
    op.create_index(op.f('ix_employees_is_deleted'), 'employees', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_employees_manager_id'), 'employees', ['manager_id'], unique=False)
    op.create_index(op.f('ix_employees_position_id'), 'employees', ['position_id'], unique=False)
    
    # Step 1.9: Create junction and dependent tables
    op.create_table('employee_roles',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('employee_id', sa.Uuid(), nullable=False),
    sa.Column('role_id', sa.Uuid(), nullable=False),
    sa.Column('assigned_at', sa.DateTime(), nullable=False),
    sa.Column('assigned_by_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name=op.f('fk_employee_roles_employee_id_employees'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name=op.f('fk_employee_roles_role_id_roles'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_employee_roles')),
    sa.UniqueConstraint('employee_id', 'role_id', name='uq_employee_role')
    )
    op.create_index(op.f('ix_employee_roles_employee_id'), 'employee_roles', ['employee_id'], unique=False)
    op.create_index(op.f('ix_employee_roles_id'), 'employee_roles', ['id'], unique=False)
    op.create_index(op.f('ix_employee_roles_role_id'), 'employee_roles', ['role_id'], unique=False)
    op.create_table('export_jobs',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('employee_id', sa.Uuid(), nullable=False),
    sa.Column('export_type', sa.String(length=50), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('file_path', sa.String(length=500), nullable=True),
    sa.Column('params', sa.JSON(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name=op.f('fk_export_jobs_employee_id_employees'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_export_jobs'))
    )
    op.create_index(op.f('ix_export_jobs_employee_id'), 'export_jobs', ['employee_id'], unique=False)
    op.create_index(op.f('ix_export_jobs_export_type'), 'export_jobs', ['export_type'], unique=False)
    op.create_index(op.f('ix_export_jobs_id'), 'export_jobs', ['id'], unique=False)
    op.create_index(op.f('ix_export_jobs_status'), 'export_jobs', ['status'], unique=False)
    op.create_table('role_menu_perms',
    sa.Column('role_id', sa.Uuid(), nullable=False),
    sa.Column('menu_id', sa.Uuid(), nullable=False),
    sa.Column('can_read', sa.Boolean(), nullable=False),
    sa.Column('can_write', sa.Boolean(), nullable=False),
    sa.Column('can_delete', sa.Boolean(), nullable=False),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sa.Uuid(), nullable=True),
    sa.Column('updated_by_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['menu_id'], ['menus.id'], name=op.f('fk_role_menu_perms_menu_id_menus'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], name=op.f('fk_role_menu_perms_role_id_roles'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_role_menu_perms')),
    sa.UniqueConstraint('role_id', 'menu_id', name='uq_role_menu')
    )
    op.create_index(op.f('ix_role_menu_perms_id'), 'role_menu_perms', ['id'], unique=False)
    op.create_index(op.f('ix_role_menu_perms_is_deleted'), 'role_menu_perms', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_role_menu_perms_menu_id'), 'role_menu_perms', ['menu_id'], unique=False)
    op.create_index(op.f('ix_role_menu_perms_role_id'), 'role_menu_perms', ['role_id'], unique=False)
    op.create_table('work_logs',
    sa.Column('employee_id', sa.Uuid(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('hours', sa.Numeric(precision=5, scale=2), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('approver_id', sa.Uuid(), nullable=True),
    sa.Column('approved_at', sa.DateTime(), nullable=True),
    sa.Column('rejection_reason', sa.Text(), nullable=True),
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by_id', sa.Uuid(), nullable=True),
    sa.Column('updated_by_id', sa.Uuid(), nullable=True),
    sa.ForeignKeyConstraint(['approver_id'], ['employees.id'], name=op.f('fk_work_logs_approver_id_employees'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.id'], name=op.f('fk_work_logs_employee_id_employees'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_work_logs'))
    )
    op.create_index(op.f('ix_work_logs_approver_id'), 'work_logs', ['approver_id'], unique=False)
    op.create_index(op.f('ix_work_logs_date'), 'work_logs', ['date'], unique=False)
    op.create_index(op.f('ix_work_logs_employee_id'), 'work_logs', ['employee_id'], unique=False)
    op.create_index(op.f('ix_work_logs_id'), 'work_logs', ['id'], unique=False)
    op.create_index(op.f('ix_work_logs_is_deleted'), 'work_logs', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_work_logs_status'), 'work_logs', ['status'], unique=False)
    
    # Step 2: Now that employees table exists, add manager_id FK constraint to departments
    op.create_foreign_key(
        op.f('fk_departments_manager_id_employees'),
        'departments', 'employees',
        ['manager_id'], ['id'],
        ondelete='SET NULL'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Step 1: Drop manager_id FK constraint before dropping employees table
    op.drop_constraint(op.f('fk_departments_manager_id_employees'), 'departments', type_='foreignkey')
    
    op.drop_index(op.f('ix_work_logs_status'), table_name='work_logs')
    op.drop_index(op.f('ix_work_logs_is_deleted'), table_name='work_logs')
    op.drop_index(op.f('ix_work_logs_id'), table_name='work_logs')
    op.drop_index(op.f('ix_work_logs_employee_id'), table_name='work_logs')
    op.drop_index(op.f('ix_work_logs_date'), table_name='work_logs')
    op.drop_index(op.f('ix_work_logs_approver_id'), table_name='work_logs')
    op.drop_table('work_logs')
    op.drop_index(op.f('ix_role_menu_perms_role_id'), table_name='role_menu_perms')
    op.drop_index(op.f('ix_role_menu_perms_menu_id'), table_name='role_menu_perms')
    op.drop_index(op.f('ix_role_menu_perms_is_deleted'), table_name='role_menu_perms')
    op.drop_index(op.f('ix_role_menu_perms_id'), table_name='role_menu_perms')
    op.drop_table('role_menu_perms')
    op.drop_index(op.f('ix_export_jobs_status'), table_name='export_jobs')
    op.drop_index(op.f('ix_export_jobs_id'), table_name='export_jobs')
    op.drop_index(op.f('ix_export_jobs_export_type'), table_name='export_jobs')
    op.drop_index(op.f('ix_export_jobs_employee_id'), table_name='export_jobs')
    op.drop_table('export_jobs')
    op.drop_index(op.f('ix_employee_roles_role_id'), table_name='employee_roles')
    op.drop_index(op.f('ix_employee_roles_id'), table_name='employee_roles')
    op.drop_index(op.f('ix_employee_roles_employee_id'), table_name='employee_roles')
    op.drop_table('employee_roles')
    op.drop_index(op.f('ix_roles_name'), table_name='roles')
    op.drop_index(op.f('ix_roles_is_system_role'), table_name='roles')
    op.drop_index(op.f('ix_roles_is_deleted'), table_name='roles')
    op.drop_index(op.f('ix_roles_id'), table_name='roles')
    op.drop_index(op.f('ix_roles_code'), table_name='roles')
    op.drop_table('roles')
    op.drop_index(op.f('ix_positions_name'), table_name='positions')
    op.drop_index(op.f('ix_positions_level'), table_name='positions')
    op.drop_index(op.f('ix_positions_is_deleted'), table_name='positions')
    op.drop_index(op.f('ix_positions_is_active'), table_name='positions')
    op.drop_index(op.f('ix_positions_id'), table_name='positions')
    op.drop_index(op.f('ix_positions_department_id'), table_name='positions')
    op.drop_index(op.f('ix_positions_code'), table_name='positions')
    op.drop_table('positions')
    op.drop_index(op.f('ix_menus_sort_order'), table_name='menus')
    op.drop_index(op.f('ix_menus_path'), table_name='menus')
    op.drop_index(op.f('ix_menus_parent_id'), table_name='menus')
    op.drop_index(op.f('ix_menus_name'), table_name='menus')
    op.drop_index(op.f('ix_menus_is_deleted'), table_name='menus')
    op.drop_index(op.f('ix_menus_is_active'), table_name='menus')
    op.drop_index(op.f('ix_menus_id'), table_name='menus')
    op.drop_table('menus')
    op.drop_index(op.f('ix_employees_position_id'), table_name='employees')
    op.drop_index(op.f('ix_employees_manager_id'), table_name='employees')
    op.drop_index(op.f('ix_employees_is_deleted'), table_name='employees')
    op.drop_index(op.f('ix_employees_id'), table_name='employees')
    op.drop_index(op.f('ix_employees_employee_number'), table_name='employees')
    op.drop_index(op.f('ix_employees_department_id'), table_name='employees')
    op.drop_table('employees')
    op.drop_index(op.f('ix_departments_parent_id'), table_name='departments')
    op.drop_index(op.f('ix_departments_name'), table_name='departments')
    op.drop_index(op.f('ix_departments_manager_id'), table_name='departments')
    op.drop_index(op.f('ix_departments_is_deleted'), table_name='departments')
    op.drop_index(op.f('ix_departments_is_active'), table_name='departments')
    op.drop_index(op.f('ix_departments_id'), table_name='departments')
    op.drop_index(op.f('ix_departments_code'), table_name='departments')
    op.drop_table('departments')
    # ### end Alembic commands ###