"""
employee schemas.

Auto-generated by crud-generate CLI tool.
"""
from datetime import date, datetime
from decimal import Decimal
from typing import Optional
from uuid import UUID

from pydantic import Field, field_validator

from app.schemas.base import CreateSchema, UpdateSchema, ResponseSchema, ListResponseSchema
from app.schemas.position_schemas import PositionResponse


class EmployeeCreate(CreateSchema):
    """
    Schema for creating a new employee.
    
    Used in POST /employees requests.
    """

    first_name: str = Field(description="The first_name field")
    last_name: str = Field(description="The last_name field")
    email: str = Field(description="The email field")
    employee_number: str = Field(description="Unique employee identifier")
    hire_date: date = Field(description="Date of hire")
    position_id: Optional[UUID] = Field(default=None, description="UUID of the position/job role for this employee")
    
    
    # Add validators here
    # Example:
    # @field_validator('email')
    # @classmethod
    # def validate_email(cls, v: str) -> str:
    #     """Validate email format."""
    #     if not v or '@' not in v:
    #         raise ValueError('Invalid email format')
    #     return v.lower()


class EmployeeUpdate(UpdateSchema):
    """
    Schema for updating a employee.
    
    All fields are optional for PATCH /employees/{id} requests.
    """

    first_name: Optional[str] = Field(default=None, description="The first_name field")
    last_name: Optional[str] = Field(default=None, description="The last_name field")
    email: Optional[str] = Field(default=None, description="The email field")
    employee_number: Optional[str] = Field(default=None, description="Unique employee identifier")
    hire_date: Optional[date] = Field(default=None, description="Date of hire")
    position_id: Optional[UUID] = Field(default=None, description="UUID of the position/job role for this employee")


class EmployeeResponse(ResponseSchema):
    """
    Schema for employee responses.
    
    Includes all fields including system-managed fields (id, timestamps, audit).
    Used in API responses for GET, POST, PUT, PATCH endpoints.
    """

    first_name: str = Field(description="The first_name field")
    last_name: str = Field(description="The last_name field")
    email: str = Field(description="The email field")
    employee_number: str = Field(description="Unique employee identifier")
    hire_date: date = Field(description="Date of hire")
    position_id: Optional[UUID] = Field(default=None, description="UUID of the position/job role for this employee")
    position: Optional[PositionResponse] = Field(default=None, description="The position/job role details for this employee")


class EmployeeListResponse(ListResponseSchema[EmployeeResponse]):
    """
    Schema for paginated employee list responses.
    
    Used in GET /employees responses.
    """
    pass