"""
product schemas.

Auto-generated by crud-generate CLI tool.
"""
from datetime import date, datetime
from decimal import Decimal
from typing import Optional
from uuid import UUID

from pydantic import Field, field_validator

from app.schemas.base import CreateSchema, UpdateSchema, ResponseSchema, ListResponseSchema


class ProductCreate(CreateSchema):
    """
    Schema for creating a new product.
    
    Used in POST /products requests.
    """
    name: str = Field(
        description="The name field"
    )
    description: str = Field(
        description="The description field"
    )
    price: Decimal = Field(
        description="The price field"
    )
    sku: str = Field(
        description="The sku field"
    )
    category: str = Field(
        description="The category field"
    )
    stock_quantity: int = Field(
        description="The stock_quantity field"
    )
    is_active: bool = Field(
        description="The is_active field"
    )    
    # Add validators here
    # Example:
    # @field_validator('email')
    # @classmethod
    # def validate_email(cls, v: str) -> str:
    #     """Validate email format."""
    #     if not v or '@' not in v:
    #         raise ValueError('Invalid email format')
    #     return v.lower()

class ProductUpdate(UpdateSchema):
    """
    Schema for updating a product.
    
    All fields are optional for PATCH /products/{id} requests.
    """
    name: Optional[str] = Field(
        default=None, description="The name field"
    )
    description: Optional[str] = Field(
        default=None, description="The description field"
    )
    price: Optional[Decimal] = Field(
        default=None, description="The price field"
    )
    sku: Optional[str] = Field(
        default=None, description="The sku field"
    )
    category: Optional[str] = Field(
        default=None, description="The category field"
    )
    stock_quantity: Optional[int] = Field(
        default=None, description="The stock_quantity field"
    )
    is_active: Optional[bool] = Field(
        default=None, description="The is_active field"
    )


class ProductResponse(ResponseSchema):
    """
    Schema for product responses.
    
    Includes all fields including system-managed fields (id, timestamps, audit).
    Used in API responses for GET, POST, PUT, PATCH endpoints.
    """
    name: str = Field(
        description="The name field"
    )
    description: str = Field(
        description="The description field"
    )
    price: Decimal = Field(
        description="The price field"
    )
    sku: str = Field(
        description="The sku field"
    )
    category: str = Field(
        description="The category field"
    )
    stock_quantity: int = Field(
        description="The stock_quantity field"
    )
    is_active: bool = Field(
        description="The is_active field"
    )

class ProductListResponse(ListResponseSchema[ProductResponse]):
    """
    Schema for paginated product list responses.
    
    Used in GET /products responses.
    """
    pass