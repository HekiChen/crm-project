"""
product model.

Auto-generated by crud-generate CLI tool.
"""
from decimal import Decimal
from typing import Optional
from uuid import UUID

from sqlalchemy import String, Integer, Boolean, Date, DateTime, Text, Float, Numeric, ForeignKey
from sqlalchemy.orm import Mapped, mapped_column, relationship

from app.models.base import BaseModel

class Product(BaseModel):
    """
    Product model.
    
Represents product entities in the system.    """
    __tablename__ = "products"    
    # name
    name: Mapped[str] = mapped_column(
        String(255), nullable=False, index=True,
        doc="The name field"    )    
    # description
    description: Mapped[str] = mapped_column(
        Text(), nullable=False,
        doc="The description field"    )    
    # price
    price: Mapped[Decimal] = mapped_column(
        Numeric(15, 2), nullable=False,
        doc="The price field"    )    
    # sku
    sku: Mapped[str] = mapped_column(
        String(255), unique=True, nullable=False,
        doc="The sku field"    )    
    # category
    category: Mapped[str] = mapped_column(
        String(255), nullable=False,
        doc="The category field"    )    
    # stock_quantity
    stock_quantity: Mapped[int] = mapped_column(
        Integer(), nullable=False,
        doc="The stock_quantity field"    )    
    # is_active
    is_active: Mapped[bool] = mapped_column(
        Boolean(), nullable=False,
        doc="The is_active field"    )    
    def __repr__(self) -> str:
        """String representation."""
        return f"<Product(id={self.id}, name='{self.name}', description='{self.description}')>"